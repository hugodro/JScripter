

Terminals which are not used:

   LITERAL_LONG
   ABSTRACT_KW
   BOOLEAN_KW
   BYTE_KW
   CATCH_KW
   CHAR_KW
   CLASS_KW
   CONST_KW
   DEFAULT_KW
   DOUBLE_KW
   EXTENDS_KW
   FINAL_KW
   FINALLY_KW
   FLOAT_KW
   GOTO_KW
   IMPLEMENTS_KW
   IMPORT_KW
   INSTANCEOF_KW
   INT_KW
   INTERFACE_KW
   LONG_KW
   NATIVE_KW
   PACKAGE_KW
   PRIVATE_KW
   PROTECTED_KW
   PUBLIC_KW
   SHORT_KW
   STATIC_KW
   SUPER_KW
   SYNCHRONIZED_KW
   THROW_KW
   THROWS_KW
   TRANSIENT_KW
   TRY_KW
   VOLATILE_KW


State 232 contains 1 shift/reduce conflict.

Grammar
rule 1    Program ->		/* empty */
rule 2    Program -> ElementList
rule 3    ElementList -> Element
rule 4    ElementList -> ElementList Element
rule 5    Element -> Statement
rule 6    Element -> FunctionDefinition
rule 7    Statement -> BlockStat
rule 8    Statement -> VariableStat
rule 9    Statement -> EmptyStat
rule 10   Statement -> ExpressionStat
rule 11   Statement -> IfThenStat
rule 12   Statement -> IterationStat
rule 13   Statement -> ContinueStat
rule 14   Statement -> BreakStat
rule 15   Statement -> ReturnStat
rule 16   Statement -> WithStat
rule 17   Statement -> SwitchStat
rule 18   Statement -> LabeledStat
rule 19   BlockStat -> '{' StatementList.Opt '}'
rule 20   StatementList.Opt ->		/* empty */
rule 21   StatementList.Opt -> StatementList
rule 22   StatementList -> Statement
rule 23   StatementList -> StatementList Statement
rule 24   VariableStat -> VariableIntroductions ';'
rule 25   VariableIntroductions -> VAR_KW VariableDeclarationList
rule 26   VariableDeclarationList -> VariableDeclaration
rule 27   VariableDeclarationList -> VariableDeclarationList ',' VariableDeclaration
rule 28   VariableDeclaration -> Identifier Initializer.Opt
rule 29   Initializer.Opt ->		/* empty */
rule 30   Initializer.Opt -> '=' AssignmentExpr
rule 31   EmptyStat -> ';'
rule 32   ExpressionStat -> Expression ';'
rule 33   IfThenStat -> IF_KW '(' Expression ')' Statement
rule 34   IfThenStat -> IF_KW '(' Expression ')' Statement ELSE_KW Statement
rule 35   IterationStat -> WhileStat
rule 36   IterationStat -> ForStat
rule 37   IterationStat -> ForInStat
rule 38   IterationStat -> DoStat
rule 39   WhileStat -> WHILE_KW '(' Expression ')' Statement
rule 40   ForStat -> FOR_KW '(' ForInit.Opt ';' Expression.Opt ';' Expression.Opt ')' Statement
rule 41   ForInit.Opt ->		/* empty */
rule 42   ForInit.Opt -> ForInit
rule 43   ForInit -> Expression
rule 44   ForInit -> VariableIntroductions
rule 45   ForInStat -> FOR_KW '(' ForInInit IN_KW Expression ')' Statement
rule 46   ForInInit -> LeftHandSideExpr
rule 47   ForInInit -> VAR_KW Identifier Initializer.Opt
rule 48   DoStat -> DO_KW Statement WHILE_KW '(' Expression ')' ';'
rule 49   ContinueStat -> CONTINUE_KW ';'
rule 50   BreakStat -> BREAK_KW ';'
rule 51   ReturnStat -> RETURN_KW Expression.Opt ';'
rule 52   WithStat -> WITH_KW '(' Expression ')' Statement
rule 53   SwitchStat -> SWITCH_KW '(' Expression ')' BlockStat
rule 54   LabeledStat -> Identifier ':' Statement
rule 55   LabeledStat -> CASE_KW Literal ':' Statement
rule 56   FunctionDefinition -> FUNCTION_KW Identifier '(' ParameterList.Opt ')' BlockStat
rule 57   ParameterList.Opt ->		/* empty */
rule 58   ParameterList.Opt -> ParameterList
rule 59   ParameterList -> Identifier
rule 60   ParameterList -> ParameterList ',' Identifier
rule 61   Expression.Opt ->		/* empty */
rule 62   Expression.Opt -> Expression
rule 63   PrimaryExpr -> Literal
rule 64   PrimaryExpr -> Identifier
rule 65   PrimaryExpr -> THIS_KW
rule 66   PrimaryExpr -> '(' Expression ')'
rule 67   MemberExpr -> PrimaryExpr
rule 68   MemberExpr -> MemberExpr '[' Expression ']'
rule 69   MemberExpr -> MemberExpr '.' Identifier
rule 70   MemberExpr -> NEW_KW MemberExpr Arguments
rule 71   NewExpr -> MemberExpr
rule 72   NewExpr -> NEW_KW NewExpr
rule 73   CallExpr -> MemberExpr Arguments
rule 74   CallExpr -> CallExpr Arguments
rule 75   CallExpr -> CallExpr '[' Expression ']'
rule 76   CallExpr -> CallExpr '.' Identifier
rule 77   Arguments -> '(' ')'
rule 78   Arguments -> '(' ArgumentList ')'
rule 79   ArgumentList -> AssignmentExpr
rule 80   ArgumentList -> ArgumentList ',' AssignmentExpr
rule 81   LeftHandSideExpr -> NewExpr
rule 82   LeftHandSideExpr -> CallExpr
rule 83   PostfixExpr -> LeftHandSideExpr
rule 84   PostfixExpr -> LeftHandSideExpr ICR_KW
rule 85   PostfixExpr -> LeftHandSideExpr DECR_KW
rule 86   UnaryExpr -> PostfixExpr
rule 87   UnaryExpr -> DELETE_KW UnaryExpr
rule 88   UnaryExpr -> VOID_KW UnaryExpr
rule 89   UnaryExpr -> TYPEOF_KW UnaryExpr
rule 90   UnaryExpr -> ICR_KW UnaryExpr
rule 91   UnaryExpr -> DECR_KW UnaryExpr
rule 92   UnaryExpr -> '+' UnaryExpr
rule 93   UnaryExpr -> '-' UnaryExpr
rule 94   UnaryExpr -> '~' UnaryExpr
rule 95   UnaryExpr -> '!' UnaryExpr
rule 96   MultiplicativeExpr -> UnaryExpr
rule 97   MultiplicativeExpr -> MultiplicativeExpr '*' UnaryExpr
rule 98   MultiplicativeExpr -> MultiplicativeExpr '/' UnaryExpr
rule 99   MultiplicativeExpr -> MultiplicativeExpr '%' UnaryExpr
rule 100  AdditiveExpr -> MultiplicativeExpr
rule 101  AdditiveExpr -> AdditiveExpr '+' MultiplicativeExpr
rule 102  AdditiveExpr -> AdditiveExpr '-' MultiplicativeExpr
rule 103  ShiftExpr -> AdditiveExpr
rule 104  ShiftExpr -> ShiftExpr LS_KW AdditiveExpr
rule 105  ShiftExpr -> ShiftExpr RS_KW AdditiveExpr
rule 106  ShiftExpr -> ShiftExpr URS_KW AdditiveExpr
rule 107  RelationalExpr -> ShiftExpr
rule 108  RelationalExpr -> RelationalExpr '<' ShiftExpr
rule 109  RelationalExpr -> RelationalExpr '>' ShiftExpr
rule 110  RelationalExpr -> RelationalExpr GE_KW ShiftExpr
rule 111  RelationalExpr -> RelationalExpr LE_KW ShiftExpr
rule 112  EqualityExpr -> RelationalExpr
rule 113  EqualityExpr -> EqualityExpr EQ_KW RelationalExpr
rule 114  EqualityExpr -> EqualityExpr NE_KW RelationalExpr
rule 115  BitAndExpr -> EqualityExpr
rule 116  BitAndExpr -> BitAndExpr '&' EqualityExpr
rule 117  BitXorExpr -> BitAndExpr
rule 118  BitXorExpr -> BitXorExpr '^' BitAndExpr
rule 119  BitIorExpr -> BitXorExpr
rule 120  BitIorExpr -> BitIorExpr '|' BitXorExpr
rule 121  LogicalAndExpr -> BitIorExpr
rule 122  LogicalAndExpr -> LogicalAndExpr ANDAND_KW BitIorExpr
rule 123  LogicalOrExpression -> LogicalAndExpr
rule 124  LogicalOrExpression -> LogicalOrExpression OROR_KW LogicalAndExpr
rule 125  ConditionalExpr -> LogicalOrExpression
rule 126  ConditionalExpr -> LogicalOrExpression '?' AssignmentExpr ':' AssignmentExpr
rule 127  AssignmentExpr -> ConditionalExpr
rule 128  AssignmentExpr -> LeftHandSideExpr AssignmentOperator AssignmentExpr
rule 129  AssignmentOperator -> '='
rule 130  AssignmentOperator -> TIMEASSIGN_KW
rule 131  AssignmentOperator -> DIVIDEASSIGN_KW
rule 132  AssignmentOperator -> MODASSIGN_KW
rule 133  AssignmentOperator -> PLUSASSIGN_KW
rule 134  AssignmentOperator -> MINUSASSIGN_KW
rule 135  AssignmentOperator -> LSASSIGN_KW
rule 136  AssignmentOperator -> RSASSIGN_KW
rule 137  AssignmentOperator -> URSASSIGN_KW
rule 138  AssignmentOperator -> ANDASSIGN_KW
rule 139  AssignmentOperator -> ORASSIGN_KW
rule 140  AssignmentOperator -> NOTASSIGN_KW
rule 141  Expression -> AssignmentExpr
rule 142  Expression -> Expression ',' AssignmentExpr
rule 143  Literal -> LITERAL_BOOLEAN
rule 144  Literal -> LITERAL_FLOAT
rule 145  Literal -> LITERAL_INT
rule 146  Literal -> LITERAL_STRING
rule 147  Literal -> LITERAL_NULL
rule 148  Identifier -> IDENTIFIER_KW

Terminals, with rules where they appear

$ (-1)
'!' (33) 95
'%' (37) 99
'&' (38) 116
'(' (40) 33 34 39 40 45 48 52 53 56 66 77 78
')' (41) 33 34 39 40 45 48 52 53 56 66 77 78
'*' (42) 97
'+' (43) 92 101
',' (44) 27 60 80 142
'-' (45) 93 102
'.' (46) 69 76
'/' (47) 98
':' (58) 54 55 126
';' (59) 24 31 32 40 48 49 50 51
'<' (60) 108
'=' (61) 30 129
'>' (62) 109
'?' (63) 126
'[' (91) 68 75
']' (93) 68 75
'^' (94) 118
'{' (123) 19
'|' (124) 120
'}' (125) 19
'~' (126) 94
error (256)
IDENTIFIER_KW (257) 148
LITERAL_BOOLEAN (258) 143
LITERAL_FLOAT (259) 144
LITERAL_INT (260) 145
LITERAL_LONG (261)
LITERAL_STRING (262) 146
LITERAL_NULL (263) 147
ABSTRACT_KW (264)
BOOLEAN_KW (265)
BREAK_KW (266) 50
BYTE_KW (267)
CASE_KW (268) 55
CATCH_KW (269)
CHAR_KW (270)
CLASS_KW (271)
CONST_KW (272)
CONTINUE_KW (273) 49
DEFAULT_KW (274)
DELETE_KW (275) 87
DO_KW (276) 48
DOUBLE_KW (277)
ELSE_KW (278) 34
EXTENDS_KW (279)
FINAL_KW (280)
FINALLY_KW (281)
FLOAT_KW (282)
FOR_KW (283) 40 45
FUNCTION_KW (284) 56
GOTO_KW (285)
IF_KW (286) 33 34
IMPLEMENTS_KW (287)
IMPORT_KW (288)
IN_KW (289) 45
INSTANCEOF_KW (290)
INT_KW (291)
INTERFACE_KW (292)
LONG_KW (293)
NATIVE_KW (294)
NEW_KW (295) 70 72
PACKAGE_KW (296)
PRIVATE_KW (297)
PROTECTED_KW (298)
PUBLIC_KW (299)
RETURN_KW (300) 51
SHORT_KW (301)
STATIC_KW (302)
SUPER_KW (303)
SWITCH_KW (304) 53
SYNCHRONIZED_KW (305)
THIS_KW (306) 65
THROW_KW (307)
THROWS_KW (308)
TRANSIENT_KW (309)
TRY_KW (310)
TYPEOF_KW (311) 89
VAR_KW (312) 25 47
VOID_KW (313) 88
VOLATILE_KW (314)
WHILE_KW (315) 39 48
WITH_KW (316) 52
LS_KW (317) 104
URS_KW (318) 106
RS_KW (319) 105
ICR_KW (320) 84 90
DECR_KW (321) 85 91
ANDAND_KW (322) 122
OROR_KW (323) 124
PLUSASSIGN_KW (324) 133
MINUSASSIGN_KW (325) 134
TIMEASSIGN_KW (326) 130
DIVIDEASSIGN_KW (327) 131
ANDASSIGN_KW (328) 138
ORASSIGN_KW (329) 139
NOTASSIGN_KW (330) 140
MODASSIGN_KW (331) 132
LSASSIGN_KW (332) 135
RSASSIGN_KW (333) 136
URSASSIGN_KW (334) 137
EQ_KW (335) 113
NE_KW (336) 114
GE_KW (337) 110
LE_KW (338) 111

Nonterminals, with rules where they appear

Program (109)
    on left: 1 2
ElementList (110)
    on left: 3 4, on right: 2 4
Element (111)
    on left: 5 6, on right: 3 4
Statement (112)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18, on right: 5 22 23 33
    34 39 40 45 48 52 54 55
BlockStat (113)
    on left: 19, on right: 7 53 56
StatementList.Opt (114)
    on left: 20 21, on right: 19
StatementList (115)
    on left: 22 23, on right: 21 23
VariableStat (116)
    on left: 24, on right: 8
VariableIntroductions (117)
    on left: 25, on right: 24 44
VariableDeclarationList (118)
    on left: 26 27, on right: 25 27
VariableDeclaration (119)
    on left: 28, on right: 26 27
Initializer.Opt (120)
    on left: 29 30, on right: 28 47
EmptyStat (121)
    on left: 31, on right: 9
ExpressionStat (122)
    on left: 32, on right: 10
IfThenStat (123)
    on left: 33 34, on right: 11
IterationStat (124)
    on left: 35 36 37 38, on right: 12
WhileStat (125)
    on left: 39, on right: 35
ForStat (126)
    on left: 40, on right: 36
ForInit.Opt (127)
    on left: 41 42, on right: 40
ForInit (128)
    on left: 43 44, on right: 42
ForInStat (129)
    on left: 45, on right: 37
ForInInit (130)
    on left: 46 47, on right: 45
DoStat (131)
    on left: 48, on right: 38
ContinueStat (132)
    on left: 49, on right: 13
BreakStat (133)
    on left: 50, on right: 14
ReturnStat (134)
    on left: 51, on right: 15
WithStat (135)
    on left: 52, on right: 16
SwitchStat (136)
    on left: 53, on right: 17
LabeledStat (137)
    on left: 54 55, on right: 18
FunctionDefinition (138)
    on left: 56, on right: 6
ParameterList.Opt (139)
    on left: 57 58, on right: 56
ParameterList (140)
    on left: 59 60, on right: 58 60
Expression.Opt (141)
    on left: 61 62, on right: 40 51
PrimaryExpr (142)
    on left: 63 64 65 66, on right: 67
MemberExpr (143)
    on left: 67 68 69 70, on right: 68 69 70 71 73
NewExpr (144)
    on left: 71 72, on right: 72 81
CallExpr (145)
    on left: 73 74 75 76, on right: 74 75 76 82
Arguments (146)
    on left: 77 78, on right: 70 73 74
ArgumentList (147)
    on left: 79 80, on right: 78 80
LeftHandSideExpr (148)
    on left: 81 82, on right: 46 83 84 85 128
PostfixExpr (149)
    on left: 83 84 85, on right: 86
UnaryExpr (150)
    on left: 86 87 88 89 90 91 92 93 94 95, on right: 87 88 89 90 91
    92 93 94 95 96 97 98 99
MultiplicativeExpr (151)
    on left: 96 97 98 99, on right: 97 98 99 100 101 102
AdditiveExpr (152)
    on left: 100 101 102, on right: 101 102 103 104 105 106
ShiftExpr (153)
    on left: 103 104 105 106, on right: 104 105 106 107 108 109 110
    111
RelationalExpr (154)
    on left: 107 108 109 110 111, on right: 108 109 110 111 112 113
    114
EqualityExpr (155)
    on left: 112 113 114, on right: 113 114 115 116
BitAndExpr (156)
    on left: 115 116, on right: 116 117 118
BitXorExpr (157)
    on left: 117 118, on right: 118 119 120
BitIorExpr (158)
    on left: 119 120, on right: 120 121 122
LogicalAndExpr (159)
    on left: 121 122, on right: 122 123 124
LogicalOrExpression (160)
    on left: 123 124, on right: 124 125 126
ConditionalExpr (161)
    on left: 125 126, on right: 127
AssignmentExpr (162)
    on left: 127 128, on right: 30 79 80 126 128 141 142
AssignmentOperator (163)
    on left: 129 130 131 132 133 134 135 136 137 138 139 140,
    on right: 128
Expression (164)
    on left: 141 142, on right: 32 33 34 39 43 45 48 52 53 62 66 68
    75 142
Literal (165)
    on left: 143 144 145 146 147, on right: 55 63
Identifier (166)
    on left: 148, on right: 28 47 54 56 59 60 64 69 76


state 0

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    CASE_KW	shift, and go to state 8
    CONTINUE_KW	shift, and go to state 9
    DELETE_KW	shift, and go to state 10
    DO_KW	shift, and go to state 11
    FOR_KW	shift, and go to state 12
    FUNCTION_KW	shift, and go to state 13
    IF_KW	shift, and go to state 14
    NEW_KW	shift, and go to state 15
    RETURN_KW	shift, and go to state 16
    SWITCH_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 20
    VOID_KW	shift, and go to state 21
    WHILE_KW	shift, and go to state 22
    WITH_KW	shift, and go to state 23
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    ';' 	shift, and go to state 26
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '{' 	shift, and go to state 31
    '!' 	shift, and go to state 32

    $default	reduce using rule 1 (Program)

    Program	go to state 250
    ElementList	go to state 33
    Element	go to state 34
    Statement	go to state 35
    BlockStat	go to state 36
    VariableStat	go to state 37
    VariableIntroductions	go to state 38
    EmptyStat	go to state 39
    ExpressionStat	go to state 40
    IfThenStat	go to state 41
    IterationStat	go to state 42
    WhileStat	go to state 43
    ForStat	go to state 44
    ForInStat	go to state 45
    DoStat	go to state 46
    ContinueStat	go to state 47
    BreakStat	go to state 48
    ReturnStat	go to state 49
    WithStat	go to state 50
    SwitchStat	go to state 51
    LabeledStat	go to state 52
    FunctionDefinition	go to state 53
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 73
    Literal	go to state 74
    Identifier	go to state 75



state 1

    Identifier  ->  IDENTIFIER_KW .   (rule 148)

    $default	reduce using rule 148 (Identifier)



state 2

    Literal  ->  LITERAL_BOOLEAN .   (rule 143)

    $default	reduce using rule 143 (Literal)



state 3

    Literal  ->  LITERAL_FLOAT .   (rule 144)

    $default	reduce using rule 144 (Literal)



state 4

    Literal  ->  LITERAL_INT .   (rule 145)

    $default	reduce using rule 145 (Literal)



state 5

    Literal  ->  LITERAL_STRING .   (rule 146)

    $default	reduce using rule 146 (Literal)



state 6

    Literal  ->  LITERAL_NULL .   (rule 147)

    $default	reduce using rule 147 (Literal)



state 7

    BreakStat  ->  BREAK_KW . ';'   (rule 50)

    ';' 	shift, and go to state 76



state 8

    LabeledStat  ->  CASE_KW . Literal ':' Statement   (rule 55)

    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6

    Literal	go to state 77



state 9

    ContinueStat  ->  CONTINUE_KW . ';'   (rule 49)

    ';' 	shift, and go to state 78



state 10

    UnaryExpr  ->  DELETE_KW . UnaryExpr   (rule 87)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 80
    Literal	go to state 74
    Identifier	go to state 81



state 11

    DoStat  ->  DO_KW . Statement WHILE_KW '(' Expression ')' ';'   (rule 48)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    CASE_KW	shift, and go to state 8
    CONTINUE_KW	shift, and go to state 9
    DELETE_KW	shift, and go to state 10
    DO_KW	shift, and go to state 11
    FOR_KW	shift, and go to state 12
    IF_KW	shift, and go to state 14
    NEW_KW	shift, and go to state 15
    RETURN_KW	shift, and go to state 16
    SWITCH_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 20
    VOID_KW	shift, and go to state 21
    WHILE_KW	shift, and go to state 22
    WITH_KW	shift, and go to state 23
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    ';' 	shift, and go to state 26
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '{' 	shift, and go to state 31
    '!' 	shift, and go to state 32

    Statement	go to state 82
    BlockStat	go to state 36
    VariableStat	go to state 37
    VariableIntroductions	go to state 38
    EmptyStat	go to state 39
    ExpressionStat	go to state 40
    IfThenStat	go to state 41
    IterationStat	go to state 42
    WhileStat	go to state 43
    ForStat	go to state 44
    ForInStat	go to state 45
    DoStat	go to state 46
    ContinueStat	go to state 47
    BreakStat	go to state 48
    ReturnStat	go to state 49
    WithStat	go to state 50
    SwitchStat	go to state 51
    LabeledStat	go to state 52
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 73
    Literal	go to state 74
    Identifier	go to state 75



state 12

    ForStat  ->  FOR_KW . '(' ForInit.Opt ';' Expression.Opt ';' Expression.Opt ')' Statement   (rule 40)
    ForInStat  ->  FOR_KW . '(' ForInInit IN_KW Expression ')' Statement   (rule 45)

    '(' 	shift, and go to state 83



state 13

    FunctionDefinition  ->  FUNCTION_KW . Identifier '(' ParameterList.Opt ')' BlockStat   (rule 56)

    IDENTIFIER_KW	shift, and go to state 1

    Identifier	go to state 84



state 14

    IfThenStat  ->  IF_KW . '(' Expression ')' Statement   (rule 33)
    IfThenStat  ->  IF_KW . '(' Expression ')' Statement ELSE_KW Statement   (rule 34)

    '(' 	shift, and go to state 85



state 15

    MemberExpr  ->  NEW_KW . MemberExpr Arguments   (rule 70)
    NewExpr  ->  NEW_KW . NewExpr   (rule 72)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    '(' 	shift, and go to state 27

    PrimaryExpr	go to state 54
    MemberExpr	go to state 86
    NewExpr	go to state 87
    Literal	go to state 74
    Identifier	go to state 81



state 16

    ReturnStat  ->  RETURN_KW . Expression.Opt ';'   (rule 51)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    $default	reduce using rule 61 (Expression.Opt)

    Expression.Opt	go to state 88
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 89
    Literal	go to state 74
    Identifier	go to state 81



state 17

    SwitchStat  ->  SWITCH_KW . '(' Expression ')' BlockStat   (rule 53)

    '(' 	shift, and go to state 90



state 18

    PrimaryExpr  ->  THIS_KW .   (rule 65)

    $default	reduce using rule 65 (PrimaryExpr)



state 19

    UnaryExpr  ->  TYPEOF_KW . UnaryExpr   (rule 89)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 91
    Literal	go to state 74
    Identifier	go to state 81



state 20

    VariableIntroductions  ->  VAR_KW . VariableDeclarationList   (rule 25)

    IDENTIFIER_KW	shift, and go to state 1

    VariableDeclarationList	go to state 92
    VariableDeclaration	go to state 93
    Identifier	go to state 94



state 21

    UnaryExpr  ->  VOID_KW . UnaryExpr   (rule 88)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 95
    Literal	go to state 74
    Identifier	go to state 81



state 22

    WhileStat  ->  WHILE_KW . '(' Expression ')' Statement   (rule 39)

    '(' 	shift, and go to state 96



state 23

    WithStat  ->  WITH_KW . '(' Expression ')' Statement   (rule 52)

    '(' 	shift, and go to state 97



state 24

    UnaryExpr  ->  ICR_KW . UnaryExpr   (rule 90)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 98
    Literal	go to state 74
    Identifier	go to state 81



state 25

    UnaryExpr  ->  DECR_KW . UnaryExpr   (rule 91)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 99
    Literal	go to state 74
    Identifier	go to state 81



state 26

    EmptyStat  ->  ';' .   (rule 31)

    $default	reduce using rule 31 (EmptyStat)



state 27

    PrimaryExpr  ->  '(' . Expression ')'   (rule 66)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 100
    Literal	go to state 74
    Identifier	go to state 81



state 28

    UnaryExpr  ->  '~' . UnaryExpr   (rule 94)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 101
    Literal	go to state 74
    Identifier	go to state 81



state 29

    UnaryExpr  ->  '+' . UnaryExpr   (rule 92)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 102
    Literal	go to state 74
    Identifier	go to state 81



state 30

    UnaryExpr  ->  '-' . UnaryExpr   (rule 93)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 103
    Literal	go to state 74
    Identifier	go to state 81



state 31

    BlockStat  ->  '{' . StatementList.Opt '}'   (rule 19)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    CASE_KW	shift, and go to state 8
    CONTINUE_KW	shift, and go to state 9
    DELETE_KW	shift, and go to state 10
    DO_KW	shift, and go to state 11
    FOR_KW	shift, and go to state 12
    IF_KW	shift, and go to state 14
    NEW_KW	shift, and go to state 15
    RETURN_KW	shift, and go to state 16
    SWITCH_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 20
    VOID_KW	shift, and go to state 21
    WHILE_KW	shift, and go to state 22
    WITH_KW	shift, and go to state 23
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    ';' 	shift, and go to state 26
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '{' 	shift, and go to state 31
    '!' 	shift, and go to state 32

    $default	reduce using rule 20 (StatementList.Opt)

    Statement	go to state 104
    BlockStat	go to state 36
    StatementList.Opt	go to state 105
    StatementList	go to state 106
    VariableStat	go to state 37
    VariableIntroductions	go to state 38
    EmptyStat	go to state 39
    ExpressionStat	go to state 40
    IfThenStat	go to state 41
    IterationStat	go to state 42
    WhileStat	go to state 43
    ForStat	go to state 44
    ForInStat	go to state 45
    DoStat	go to state 46
    ContinueStat	go to state 47
    BreakStat	go to state 48
    ReturnStat	go to state 49
    WithStat	go to state 50
    SwitchStat	go to state 51
    LabeledStat	go to state 52
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 73
    Literal	go to state 74
    Identifier	go to state 75



state 32

    UnaryExpr  ->  '!' . UnaryExpr   (rule 95)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 107
    Literal	go to state 74
    Identifier	go to state 81



state 33

    Program  ->  ElementList .   (rule 2)
    ElementList  ->  ElementList . Element   (rule 4)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    CASE_KW	shift, and go to state 8
    CONTINUE_KW	shift, and go to state 9
    DELETE_KW	shift, and go to state 10
    DO_KW	shift, and go to state 11
    FOR_KW	shift, and go to state 12
    FUNCTION_KW	shift, and go to state 13
    IF_KW	shift, and go to state 14
    NEW_KW	shift, and go to state 15
    RETURN_KW	shift, and go to state 16
    SWITCH_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 20
    VOID_KW	shift, and go to state 21
    WHILE_KW	shift, and go to state 22
    WITH_KW	shift, and go to state 23
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    ';' 	shift, and go to state 26
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '{' 	shift, and go to state 31
    '!' 	shift, and go to state 32

    $default	reduce using rule 2 (Program)

    Element	go to state 108
    Statement	go to state 35
    BlockStat	go to state 36
    VariableStat	go to state 37
    VariableIntroductions	go to state 38
    EmptyStat	go to state 39
    ExpressionStat	go to state 40
    IfThenStat	go to state 41
    IterationStat	go to state 42
    WhileStat	go to state 43
    ForStat	go to state 44
    ForInStat	go to state 45
    DoStat	go to state 46
    ContinueStat	go to state 47
    BreakStat	go to state 48
    ReturnStat	go to state 49
    WithStat	go to state 50
    SwitchStat	go to state 51
    LabeledStat	go to state 52
    FunctionDefinition	go to state 53
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 73
    Literal	go to state 74
    Identifier	go to state 75



state 34

    ElementList  ->  Element .   (rule 3)

    $default	reduce using rule 3 (ElementList)



state 35

    Element  ->  Statement .   (rule 5)

    $default	reduce using rule 5 (Element)



state 36

    Statement  ->  BlockStat .   (rule 7)

    $default	reduce using rule 7 (Statement)



state 37

    Statement  ->  VariableStat .   (rule 8)

    $default	reduce using rule 8 (Statement)



state 38

    VariableStat  ->  VariableIntroductions . ';'   (rule 24)

    ';' 	shift, and go to state 109



state 39

    Statement  ->  EmptyStat .   (rule 9)

    $default	reduce using rule 9 (Statement)



state 40

    Statement  ->  ExpressionStat .   (rule 10)

    $default	reduce using rule 10 (Statement)



state 41

    Statement  ->  IfThenStat .   (rule 11)

    $default	reduce using rule 11 (Statement)



state 42

    Statement  ->  IterationStat .   (rule 12)

    $default	reduce using rule 12 (Statement)



state 43

    IterationStat  ->  WhileStat .   (rule 35)

    $default	reduce using rule 35 (IterationStat)



state 44

    IterationStat  ->  ForStat .   (rule 36)

    $default	reduce using rule 36 (IterationStat)



state 45

    IterationStat  ->  ForInStat .   (rule 37)

    $default	reduce using rule 37 (IterationStat)



state 46

    IterationStat  ->  DoStat .   (rule 38)

    $default	reduce using rule 38 (IterationStat)



state 47

    Statement  ->  ContinueStat .   (rule 13)

    $default	reduce using rule 13 (Statement)



state 48

    Statement  ->  BreakStat .   (rule 14)

    $default	reduce using rule 14 (Statement)



state 49

    Statement  ->  ReturnStat .   (rule 15)

    $default	reduce using rule 15 (Statement)



state 50

    Statement  ->  WithStat .   (rule 16)

    $default	reduce using rule 16 (Statement)



state 51

    Statement  ->  SwitchStat .   (rule 17)

    $default	reduce using rule 17 (Statement)



state 52

    Statement  ->  LabeledStat .   (rule 18)

    $default	reduce using rule 18 (Statement)



state 53

    Element  ->  FunctionDefinition .   (rule 6)

    $default	reduce using rule 6 (Element)



state 54

    MemberExpr  ->  PrimaryExpr .   (rule 67)

    $default	reduce using rule 67 (MemberExpr)



state 55

    MemberExpr  ->  MemberExpr . '[' Expression ']'   (rule 68)
    MemberExpr  ->  MemberExpr . '.' Identifier   (rule 69)
    NewExpr  ->  MemberExpr .   (rule 71)
    CallExpr  ->  MemberExpr . Arguments   (rule 73)

    '(' 	shift, and go to state 110
    '.' 	shift, and go to state 111
    '[' 	shift, and go to state 112

    $default	reduce using rule 71 (NewExpr)

    Arguments	go to state 113



state 56

    LeftHandSideExpr  ->  NewExpr .   (rule 81)

    $default	reduce using rule 81 (LeftHandSideExpr)



state 57

    CallExpr  ->  CallExpr . Arguments   (rule 74)
    CallExpr  ->  CallExpr . '[' Expression ']'   (rule 75)
    CallExpr  ->  CallExpr . '.' Identifier   (rule 76)
    LeftHandSideExpr  ->  CallExpr .   (rule 82)

    '(' 	shift, and go to state 110
    '.' 	shift, and go to state 114
    '[' 	shift, and go to state 115

    $default	reduce using rule 82 (LeftHandSideExpr)

    Arguments	go to state 116



state 58

    PostfixExpr  ->  LeftHandSideExpr .   (rule 83)
    PostfixExpr  ->  LeftHandSideExpr . ICR_KW   (rule 84)
    PostfixExpr  ->  LeftHandSideExpr . DECR_KW   (rule 85)
    AssignmentExpr  ->  LeftHandSideExpr . AssignmentOperator AssignmentExpr   (rule 128)

    ICR_KW	shift, and go to state 117
    DECR_KW	shift, and go to state 118
    PLUSASSIGN_KW	shift, and go to state 119
    MINUSASSIGN_KW	shift, and go to state 120
    TIMEASSIGN_KW	shift, and go to state 121
    DIVIDEASSIGN_KW	shift, and go to state 122
    ANDASSIGN_KW	shift, and go to state 123
    ORASSIGN_KW	shift, and go to state 124
    NOTASSIGN_KW	shift, and go to state 125
    MODASSIGN_KW	shift, and go to state 126
    LSASSIGN_KW	shift, and go to state 127
    RSASSIGN_KW	shift, and go to state 128
    URSASSIGN_KW	shift, and go to state 129
    '=' 	shift, and go to state 130

    $default	reduce using rule 83 (PostfixExpr)

    AssignmentOperator	go to state 131



state 59

    UnaryExpr  ->  PostfixExpr .   (rule 86)

    $default	reduce using rule 86 (UnaryExpr)



state 60

    MultiplicativeExpr  ->  UnaryExpr .   (rule 96)

    $default	reduce using rule 96 (MultiplicativeExpr)



state 61

    MultiplicativeExpr  ->  MultiplicativeExpr . '*' UnaryExpr   (rule 97)
    MultiplicativeExpr  ->  MultiplicativeExpr . '/' UnaryExpr   (rule 98)
    MultiplicativeExpr  ->  MultiplicativeExpr . '%' UnaryExpr   (rule 99)
    AdditiveExpr  ->  MultiplicativeExpr .   (rule 100)

    '*' 	shift, and go to state 132
    '/' 	shift, and go to state 133
    '%' 	shift, and go to state 134

    $default	reduce using rule 100 (AdditiveExpr)



state 62

    AdditiveExpr  ->  AdditiveExpr . '+' MultiplicativeExpr   (rule 101)
    AdditiveExpr  ->  AdditiveExpr . '-' MultiplicativeExpr   (rule 102)
    ShiftExpr  ->  AdditiveExpr .   (rule 103)

    '+' 	shift, and go to state 135
    '-' 	shift, and go to state 136

    $default	reduce using rule 103 (ShiftExpr)



state 63

    ShiftExpr  ->  ShiftExpr . LS_KW AdditiveExpr   (rule 104)
    ShiftExpr  ->  ShiftExpr . RS_KW AdditiveExpr   (rule 105)
    ShiftExpr  ->  ShiftExpr . URS_KW AdditiveExpr   (rule 106)
    RelationalExpr  ->  ShiftExpr .   (rule 107)

    LS_KW	shift, and go to state 137
    URS_KW	shift, and go to state 138
    RS_KW	shift, and go to state 139

    $default	reduce using rule 107 (RelationalExpr)



state 64

    RelationalExpr  ->  RelationalExpr . '<' ShiftExpr   (rule 108)
    RelationalExpr  ->  RelationalExpr . '>' ShiftExpr   (rule 109)
    RelationalExpr  ->  RelationalExpr . GE_KW ShiftExpr   (rule 110)
    RelationalExpr  ->  RelationalExpr . LE_KW ShiftExpr   (rule 111)
    EqualityExpr  ->  RelationalExpr .   (rule 112)

    '>' 	shift, and go to state 140
    '<' 	shift, and go to state 141
    GE_KW	shift, and go to state 142
    LE_KW	shift, and go to state 143

    $default	reduce using rule 112 (EqualityExpr)



state 65

    EqualityExpr  ->  EqualityExpr . EQ_KW RelationalExpr   (rule 113)
    EqualityExpr  ->  EqualityExpr . NE_KW RelationalExpr   (rule 114)
    BitAndExpr  ->  EqualityExpr .   (rule 115)

    EQ_KW	shift, and go to state 144
    NE_KW	shift, and go to state 145

    $default	reduce using rule 115 (BitAndExpr)



state 66

    BitAndExpr  ->  BitAndExpr . '&' EqualityExpr   (rule 116)
    BitXorExpr  ->  BitAndExpr .   (rule 117)

    '&' 	shift, and go to state 146

    $default	reduce using rule 117 (BitXorExpr)



state 67

    BitXorExpr  ->  BitXorExpr . '^' BitAndExpr   (rule 118)
    BitIorExpr  ->  BitXorExpr .   (rule 119)

    '^' 	shift, and go to state 147

    $default	reduce using rule 119 (BitIorExpr)



state 68

    BitIorExpr  ->  BitIorExpr . '|' BitXorExpr   (rule 120)
    LogicalAndExpr  ->  BitIorExpr .   (rule 121)

    '|' 	shift, and go to state 148

    $default	reduce using rule 121 (LogicalAndExpr)



state 69

    LogicalAndExpr  ->  LogicalAndExpr . ANDAND_KW BitIorExpr   (rule 122)
    LogicalOrExpression  ->  LogicalAndExpr .   (rule 123)

    ANDAND_KW	shift, and go to state 149

    $default	reduce using rule 123 (LogicalOrExpression)



state 70

    LogicalOrExpression  ->  LogicalOrExpression . OROR_KW LogicalAndExpr   (rule 124)
    ConditionalExpr  ->  LogicalOrExpression .   (rule 125)
    ConditionalExpr  ->  LogicalOrExpression . '?' AssignmentExpr ':' AssignmentExpr   (rule 126)

    OROR_KW	shift, and go to state 150
    '?' 	shift, and go to state 151

    $default	reduce using rule 125 (ConditionalExpr)



state 71

    AssignmentExpr  ->  ConditionalExpr .   (rule 127)

    $default	reduce using rule 127 (AssignmentExpr)



state 72

    Expression  ->  AssignmentExpr .   (rule 141)

    $default	reduce using rule 141 (Expression)



state 73

    ExpressionStat  ->  Expression . ';'   (rule 32)
    Expression  ->  Expression . ',' AssignmentExpr   (rule 142)

    ';' 	shift, and go to state 152
    ',' 	shift, and go to state 153



state 74

    PrimaryExpr  ->  Literal .   (rule 63)

    $default	reduce using rule 63 (PrimaryExpr)



state 75

    LabeledStat  ->  Identifier . ':' Statement   (rule 54)
    PrimaryExpr  ->  Identifier .   (rule 64)

    ':' 	shift, and go to state 154

    $default	reduce using rule 64 (PrimaryExpr)



state 76

    BreakStat  ->  BREAK_KW ';' .   (rule 50)

    $default	reduce using rule 50 (BreakStat)



state 77

    LabeledStat  ->  CASE_KW Literal . ':' Statement   (rule 55)

    ':' 	shift, and go to state 155



state 78

    ContinueStat  ->  CONTINUE_KW ';' .   (rule 49)

    $default	reduce using rule 49 (ContinueStat)



state 79

    PostfixExpr  ->  LeftHandSideExpr .   (rule 83)
    PostfixExpr  ->  LeftHandSideExpr . ICR_KW   (rule 84)
    PostfixExpr  ->  LeftHandSideExpr . DECR_KW   (rule 85)

    ICR_KW	shift, and go to state 117
    DECR_KW	shift, and go to state 118

    $default	reduce using rule 83 (PostfixExpr)



state 80

    UnaryExpr  ->  DELETE_KW UnaryExpr .   (rule 87)

    $default	reduce using rule 87 (UnaryExpr)



state 81

    PrimaryExpr  ->  Identifier .   (rule 64)

    $default	reduce using rule 64 (PrimaryExpr)



state 82

    DoStat  ->  DO_KW Statement . WHILE_KW '(' Expression ')' ';'   (rule 48)

    WHILE_KW	shift, and go to state 156



state 83

    ForStat  ->  FOR_KW '(' . ForInit.Opt ';' Expression.Opt ';' Expression.Opt ')' Statement   (rule 40)
    ForInStat  ->  FOR_KW '(' . ForInInit IN_KW Expression ')' Statement   (rule 45)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 157
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    $default	reduce using rule 41 (ForInit.Opt)

    VariableIntroductions	go to state 158
    ForInit.Opt	go to state 159
    ForInit	go to state 160
    ForInInit	go to state 161
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 162
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 163
    Literal	go to state 74
    Identifier	go to state 81



state 84

    FunctionDefinition  ->  FUNCTION_KW Identifier . '(' ParameterList.Opt ')' BlockStat   (rule 56)

    '(' 	shift, and go to state 164



state 85

    IfThenStat  ->  IF_KW '(' . Expression ')' Statement   (rule 33)
    IfThenStat  ->  IF_KW '(' . Expression ')' Statement ELSE_KW Statement   (rule 34)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 165
    Literal	go to state 74
    Identifier	go to state 81



state 86

    MemberExpr  ->  MemberExpr . '[' Expression ']'   (rule 68)
    MemberExpr  ->  MemberExpr . '.' Identifier   (rule 69)
    MemberExpr  ->  NEW_KW MemberExpr . Arguments   (rule 70)
    NewExpr  ->  MemberExpr .   (rule 71)

    '(' 	shift, and go to state 110
    '.' 	shift, and go to state 111
    '[' 	shift, and go to state 112

    $default	reduce using rule 71 (NewExpr)

    Arguments	go to state 166



state 87

    NewExpr  ->  NEW_KW NewExpr .   (rule 72)

    $default	reduce using rule 72 (NewExpr)



state 88

    ReturnStat  ->  RETURN_KW Expression.Opt . ';'   (rule 51)

    ';' 	shift, and go to state 167



state 89

    Expression.Opt  ->  Expression .   (rule 62)
    Expression  ->  Expression . ',' AssignmentExpr   (rule 142)

    ',' 	shift, and go to state 153

    $default	reduce using rule 62 (Expression.Opt)



state 90

    SwitchStat  ->  SWITCH_KW '(' . Expression ')' BlockStat   (rule 53)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 168
    Literal	go to state 74
    Identifier	go to state 81



state 91

    UnaryExpr  ->  TYPEOF_KW UnaryExpr .   (rule 89)

    $default	reduce using rule 89 (UnaryExpr)



state 92

    VariableIntroductions  ->  VAR_KW VariableDeclarationList .   (rule 25)
    VariableDeclarationList  ->  VariableDeclarationList . ',' VariableDeclaration   (rule 27)

    ',' 	shift, and go to state 169

    $default	reduce using rule 25 (VariableIntroductions)



state 93

    VariableDeclarationList  ->  VariableDeclaration .   (rule 26)

    $default	reduce using rule 26 (VariableDeclarationList)



state 94

    VariableDeclaration  ->  Identifier . Initializer.Opt   (rule 28)

    '=' 	shift, and go to state 170

    $default	reduce using rule 29 (Initializer.Opt)

    Initializer.Opt	go to state 171



state 95

    UnaryExpr  ->  VOID_KW UnaryExpr .   (rule 88)

    $default	reduce using rule 88 (UnaryExpr)



state 96

    WhileStat  ->  WHILE_KW '(' . Expression ')' Statement   (rule 39)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 172
    Literal	go to state 74
    Identifier	go to state 81



state 97

    WithStat  ->  WITH_KW '(' . Expression ')' Statement   (rule 52)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 173
    Literal	go to state 74
    Identifier	go to state 81



state 98

    UnaryExpr  ->  ICR_KW UnaryExpr .   (rule 90)

    $default	reduce using rule 90 (UnaryExpr)



state 99

    UnaryExpr  ->  DECR_KW UnaryExpr .   (rule 91)

    $default	reduce using rule 91 (UnaryExpr)



state 100

    PrimaryExpr  ->  '(' Expression . ')'   (rule 66)
    Expression  ->  Expression . ',' AssignmentExpr   (rule 142)

    ')' 	shift, and go to state 174
    ',' 	shift, and go to state 153



state 101

    UnaryExpr  ->  '~' UnaryExpr .   (rule 94)

    $default	reduce using rule 94 (UnaryExpr)



state 102

    UnaryExpr  ->  '+' UnaryExpr .   (rule 92)

    $default	reduce using rule 92 (UnaryExpr)



state 103

    UnaryExpr  ->  '-' UnaryExpr .   (rule 93)

    $default	reduce using rule 93 (UnaryExpr)



state 104

    StatementList  ->  Statement .   (rule 22)

    $default	reduce using rule 22 (StatementList)



state 105

    BlockStat  ->  '{' StatementList.Opt . '}'   (rule 19)

    '}' 	shift, and go to state 175



state 106

    StatementList.Opt  ->  StatementList .   (rule 21)
    StatementList  ->  StatementList . Statement   (rule 23)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    CASE_KW	shift, and go to state 8
    CONTINUE_KW	shift, and go to state 9
    DELETE_KW	shift, and go to state 10
    DO_KW	shift, and go to state 11
    FOR_KW	shift, and go to state 12
    IF_KW	shift, and go to state 14
    NEW_KW	shift, and go to state 15
    RETURN_KW	shift, and go to state 16
    SWITCH_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 20
    VOID_KW	shift, and go to state 21
    WHILE_KW	shift, and go to state 22
    WITH_KW	shift, and go to state 23
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    ';' 	shift, and go to state 26
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '{' 	shift, and go to state 31
    '!' 	shift, and go to state 32

    $default	reduce using rule 21 (StatementList.Opt)

    Statement	go to state 176
    BlockStat	go to state 36
    VariableStat	go to state 37
    VariableIntroductions	go to state 38
    EmptyStat	go to state 39
    ExpressionStat	go to state 40
    IfThenStat	go to state 41
    IterationStat	go to state 42
    WhileStat	go to state 43
    ForStat	go to state 44
    ForInStat	go to state 45
    DoStat	go to state 46
    ContinueStat	go to state 47
    BreakStat	go to state 48
    ReturnStat	go to state 49
    WithStat	go to state 50
    SwitchStat	go to state 51
    LabeledStat	go to state 52
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 73
    Literal	go to state 74
    Identifier	go to state 75



state 107

    UnaryExpr  ->  '!' UnaryExpr .   (rule 95)

    $default	reduce using rule 95 (UnaryExpr)



state 108

    ElementList  ->  ElementList Element .   (rule 4)

    $default	reduce using rule 4 (ElementList)



state 109

    VariableStat  ->  VariableIntroductions ';' .   (rule 24)

    $default	reduce using rule 24 (VariableStat)



state 110

    Arguments  ->  '(' . ')'   (rule 77)
    Arguments  ->  '(' . ArgumentList ')'   (rule 78)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    ')' 	shift, and go to state 177
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    ArgumentList	go to state 178
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 179
    Literal	go to state 74
    Identifier	go to state 81



state 111

    MemberExpr  ->  MemberExpr '.' . Identifier   (rule 69)

    IDENTIFIER_KW	shift, and go to state 1

    Identifier	go to state 180



state 112

    MemberExpr  ->  MemberExpr '[' . Expression ']'   (rule 68)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 181
    Literal	go to state 74
    Identifier	go to state 81



state 113

    CallExpr  ->  MemberExpr Arguments .   (rule 73)

    $default	reduce using rule 73 (CallExpr)



state 114

    CallExpr  ->  CallExpr '.' . Identifier   (rule 76)

    IDENTIFIER_KW	shift, and go to state 1

    Identifier	go to state 182



state 115

    CallExpr  ->  CallExpr '[' . Expression ']'   (rule 75)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 183
    Literal	go to state 74
    Identifier	go to state 81



state 116

    CallExpr  ->  CallExpr Arguments .   (rule 74)

    $default	reduce using rule 74 (CallExpr)



state 117

    PostfixExpr  ->  LeftHandSideExpr ICR_KW .   (rule 84)

    $default	reduce using rule 84 (PostfixExpr)



state 118

    PostfixExpr  ->  LeftHandSideExpr DECR_KW .   (rule 85)

    $default	reduce using rule 85 (PostfixExpr)



state 119

    AssignmentOperator  ->  PLUSASSIGN_KW .   (rule 133)

    $default	reduce using rule 133 (AssignmentOperator)



state 120

    AssignmentOperator  ->  MINUSASSIGN_KW .   (rule 134)

    $default	reduce using rule 134 (AssignmentOperator)



state 121

    AssignmentOperator  ->  TIMEASSIGN_KW .   (rule 130)

    $default	reduce using rule 130 (AssignmentOperator)



state 122

    AssignmentOperator  ->  DIVIDEASSIGN_KW .   (rule 131)

    $default	reduce using rule 131 (AssignmentOperator)



state 123

    AssignmentOperator  ->  ANDASSIGN_KW .   (rule 138)

    $default	reduce using rule 138 (AssignmentOperator)



state 124

    AssignmentOperator  ->  ORASSIGN_KW .   (rule 139)

    $default	reduce using rule 139 (AssignmentOperator)



state 125

    AssignmentOperator  ->  NOTASSIGN_KW .   (rule 140)

    $default	reduce using rule 140 (AssignmentOperator)



state 126

    AssignmentOperator  ->  MODASSIGN_KW .   (rule 132)

    $default	reduce using rule 132 (AssignmentOperator)



state 127

    AssignmentOperator  ->  LSASSIGN_KW .   (rule 135)

    $default	reduce using rule 135 (AssignmentOperator)



state 128

    AssignmentOperator  ->  RSASSIGN_KW .   (rule 136)

    $default	reduce using rule 136 (AssignmentOperator)



state 129

    AssignmentOperator  ->  URSASSIGN_KW .   (rule 137)

    $default	reduce using rule 137 (AssignmentOperator)



state 130

    AssignmentOperator  ->  '=' .   (rule 129)

    $default	reduce using rule 129 (AssignmentOperator)



state 131

    AssignmentExpr  ->  LeftHandSideExpr AssignmentOperator . AssignmentExpr   (rule 128)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 184
    Literal	go to state 74
    Identifier	go to state 81



state 132

    MultiplicativeExpr  ->  MultiplicativeExpr '*' . UnaryExpr   (rule 97)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 185
    Literal	go to state 74
    Identifier	go to state 81



state 133

    MultiplicativeExpr  ->  MultiplicativeExpr '/' . UnaryExpr   (rule 98)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 186
    Literal	go to state 74
    Identifier	go to state 81



state 134

    MultiplicativeExpr  ->  MultiplicativeExpr '%' . UnaryExpr   (rule 99)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 187
    Literal	go to state 74
    Identifier	go to state 81



state 135

    AdditiveExpr  ->  AdditiveExpr '+' . MultiplicativeExpr   (rule 101)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 188
    Literal	go to state 74
    Identifier	go to state 81



state 136

    AdditiveExpr  ->  AdditiveExpr '-' . MultiplicativeExpr   (rule 102)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 189
    Literal	go to state 74
    Identifier	go to state 81



state 137

    ShiftExpr  ->  ShiftExpr LS_KW . AdditiveExpr   (rule 104)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 190
    Literal	go to state 74
    Identifier	go to state 81



state 138

    ShiftExpr  ->  ShiftExpr URS_KW . AdditiveExpr   (rule 106)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 191
    Literal	go to state 74
    Identifier	go to state 81



state 139

    ShiftExpr  ->  ShiftExpr RS_KW . AdditiveExpr   (rule 105)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 192
    Literal	go to state 74
    Identifier	go to state 81



state 140

    RelationalExpr  ->  RelationalExpr '>' . ShiftExpr   (rule 109)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 193
    Literal	go to state 74
    Identifier	go to state 81



state 141

    RelationalExpr  ->  RelationalExpr '<' . ShiftExpr   (rule 108)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 194
    Literal	go to state 74
    Identifier	go to state 81



state 142

    RelationalExpr  ->  RelationalExpr GE_KW . ShiftExpr   (rule 110)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 195
    Literal	go to state 74
    Identifier	go to state 81



state 143

    RelationalExpr  ->  RelationalExpr LE_KW . ShiftExpr   (rule 111)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 196
    Literal	go to state 74
    Identifier	go to state 81



state 144

    EqualityExpr  ->  EqualityExpr EQ_KW . RelationalExpr   (rule 113)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 197
    Literal	go to state 74
    Identifier	go to state 81



state 145

    EqualityExpr  ->  EqualityExpr NE_KW . RelationalExpr   (rule 114)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 198
    Literal	go to state 74
    Identifier	go to state 81



state 146

    BitAndExpr  ->  BitAndExpr '&' . EqualityExpr   (rule 116)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 199
    Literal	go to state 74
    Identifier	go to state 81



state 147

    BitXorExpr  ->  BitXorExpr '^' . BitAndExpr   (rule 118)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 200
    Literal	go to state 74
    Identifier	go to state 81



state 148

    BitIorExpr  ->  BitIorExpr '|' . BitXorExpr   (rule 120)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 201
    Literal	go to state 74
    Identifier	go to state 81



state 149

    LogicalAndExpr  ->  LogicalAndExpr ANDAND_KW . BitIorExpr   (rule 122)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 202
    Literal	go to state 74
    Identifier	go to state 81



state 150

    LogicalOrExpression  ->  LogicalOrExpression OROR_KW . LogicalAndExpr   (rule 124)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 79
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 203
    Literal	go to state 74
    Identifier	go to state 81



state 151

    ConditionalExpr  ->  LogicalOrExpression '?' . AssignmentExpr ':' AssignmentExpr   (rule 126)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 204
    Literal	go to state 74
    Identifier	go to state 81



state 152

    ExpressionStat  ->  Expression ';' .   (rule 32)

    $default	reduce using rule 32 (ExpressionStat)



state 153

    Expression  ->  Expression ',' . AssignmentExpr   (rule 142)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 205
    Literal	go to state 74
    Identifier	go to state 81



state 154

    LabeledStat  ->  Identifier ':' . Statement   (rule 54)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    CASE_KW	shift, and go to state 8
    CONTINUE_KW	shift, and go to state 9
    DELETE_KW	shift, and go to state 10
    DO_KW	shift, and go to state 11
    FOR_KW	shift, and go to state 12
    IF_KW	shift, and go to state 14
    NEW_KW	shift, and go to state 15
    RETURN_KW	shift, and go to state 16
    SWITCH_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 20
    VOID_KW	shift, and go to state 21
    WHILE_KW	shift, and go to state 22
    WITH_KW	shift, and go to state 23
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    ';' 	shift, and go to state 26
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '{' 	shift, and go to state 31
    '!' 	shift, and go to state 32

    Statement	go to state 206
    BlockStat	go to state 36
    VariableStat	go to state 37
    VariableIntroductions	go to state 38
    EmptyStat	go to state 39
    ExpressionStat	go to state 40
    IfThenStat	go to state 41
    IterationStat	go to state 42
    WhileStat	go to state 43
    ForStat	go to state 44
    ForInStat	go to state 45
    DoStat	go to state 46
    ContinueStat	go to state 47
    BreakStat	go to state 48
    ReturnStat	go to state 49
    WithStat	go to state 50
    SwitchStat	go to state 51
    LabeledStat	go to state 52
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 73
    Literal	go to state 74
    Identifier	go to state 75



state 155

    LabeledStat  ->  CASE_KW Literal ':' . Statement   (rule 55)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    CASE_KW	shift, and go to state 8
    CONTINUE_KW	shift, and go to state 9
    DELETE_KW	shift, and go to state 10
    DO_KW	shift, and go to state 11
    FOR_KW	shift, and go to state 12
    IF_KW	shift, and go to state 14
    NEW_KW	shift, and go to state 15
    RETURN_KW	shift, and go to state 16
    SWITCH_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 20
    VOID_KW	shift, and go to state 21
    WHILE_KW	shift, and go to state 22
    WITH_KW	shift, and go to state 23
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    ';' 	shift, and go to state 26
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '{' 	shift, and go to state 31
    '!' 	shift, and go to state 32

    Statement	go to state 207
    BlockStat	go to state 36
    VariableStat	go to state 37
    VariableIntroductions	go to state 38
    EmptyStat	go to state 39
    ExpressionStat	go to state 40
    IfThenStat	go to state 41
    IterationStat	go to state 42
    WhileStat	go to state 43
    ForStat	go to state 44
    ForInStat	go to state 45
    DoStat	go to state 46
    ContinueStat	go to state 47
    BreakStat	go to state 48
    ReturnStat	go to state 49
    WithStat	go to state 50
    SwitchStat	go to state 51
    LabeledStat	go to state 52
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 73
    Literal	go to state 74
    Identifier	go to state 75



state 156

    DoStat  ->  DO_KW Statement WHILE_KW . '(' Expression ')' ';'   (rule 48)

    '(' 	shift, and go to state 208



state 157

    VariableIntroductions  ->  VAR_KW . VariableDeclarationList   (rule 25)
    ForInInit  ->  VAR_KW . Identifier Initializer.Opt   (rule 47)

    IDENTIFIER_KW	shift, and go to state 1

    VariableDeclarationList	go to state 92
    VariableDeclaration	go to state 93
    Identifier	go to state 209



state 158

    ForInit  ->  VariableIntroductions .   (rule 44)

    $default	reduce using rule 44 (ForInit)



state 159

    ForStat  ->  FOR_KW '(' ForInit.Opt . ';' Expression.Opt ';' Expression.Opt ')' Statement   (rule 40)

    ';' 	shift, and go to state 210



state 160

    ForInit.Opt  ->  ForInit .   (rule 42)

    $default	reduce using rule 42 (ForInit.Opt)



state 161

    ForInStat  ->  FOR_KW '(' ForInInit . IN_KW Expression ')' Statement   (rule 45)

    IN_KW	shift, and go to state 211



state 162

    ForInInit  ->  LeftHandSideExpr .   (rule 46)
    PostfixExpr  ->  LeftHandSideExpr .   (rule 83)
    PostfixExpr  ->  LeftHandSideExpr . ICR_KW   (rule 84)
    PostfixExpr  ->  LeftHandSideExpr . DECR_KW   (rule 85)
    AssignmentExpr  ->  LeftHandSideExpr . AssignmentOperator AssignmentExpr   (rule 128)

    ICR_KW	shift, and go to state 117
    DECR_KW	shift, and go to state 118
    PLUSASSIGN_KW	shift, and go to state 119
    MINUSASSIGN_KW	shift, and go to state 120
    TIMEASSIGN_KW	shift, and go to state 121
    DIVIDEASSIGN_KW	shift, and go to state 122
    ANDASSIGN_KW	shift, and go to state 123
    ORASSIGN_KW	shift, and go to state 124
    NOTASSIGN_KW	shift, and go to state 125
    MODASSIGN_KW	shift, and go to state 126
    LSASSIGN_KW	shift, and go to state 127
    RSASSIGN_KW	shift, and go to state 128
    URSASSIGN_KW	shift, and go to state 129
    '=' 	shift, and go to state 130

    IN_KW	reduce using rule 46 (ForInInit)
    $default	reduce using rule 83 (PostfixExpr)

    AssignmentOperator	go to state 131



state 163

    ForInit  ->  Expression .   (rule 43)
    Expression  ->  Expression . ',' AssignmentExpr   (rule 142)

    ',' 	shift, and go to state 153

    $default	reduce using rule 43 (ForInit)



state 164

    FunctionDefinition  ->  FUNCTION_KW Identifier '(' . ParameterList.Opt ')' BlockStat   (rule 56)

    IDENTIFIER_KW	shift, and go to state 1

    $default	reduce using rule 57 (ParameterList.Opt)

    ParameterList.Opt	go to state 212
    ParameterList	go to state 213
    Identifier	go to state 214



state 165

    IfThenStat  ->  IF_KW '(' Expression . ')' Statement   (rule 33)
    IfThenStat  ->  IF_KW '(' Expression . ')' Statement ELSE_KW Statement   (rule 34)
    Expression  ->  Expression . ',' AssignmentExpr   (rule 142)

    ')' 	shift, and go to state 215
    ',' 	shift, and go to state 153



state 166

    MemberExpr  ->  NEW_KW MemberExpr Arguments .   (rule 70)

    $default	reduce using rule 70 (MemberExpr)



state 167

    ReturnStat  ->  RETURN_KW Expression.Opt ';' .   (rule 51)

    $default	reduce using rule 51 (ReturnStat)



state 168

    SwitchStat  ->  SWITCH_KW '(' Expression . ')' BlockStat   (rule 53)
    Expression  ->  Expression . ',' AssignmentExpr   (rule 142)

    ')' 	shift, and go to state 216
    ',' 	shift, and go to state 153



state 169

    VariableDeclarationList  ->  VariableDeclarationList ',' . VariableDeclaration   (rule 27)

    IDENTIFIER_KW	shift, and go to state 1

    VariableDeclaration	go to state 217
    Identifier	go to state 94



state 170

    Initializer.Opt  ->  '=' . AssignmentExpr   (rule 30)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 218
    Literal	go to state 74
    Identifier	go to state 81



state 171

    VariableDeclaration  ->  Identifier Initializer.Opt .   (rule 28)

    $default	reduce using rule 28 (VariableDeclaration)



state 172

    WhileStat  ->  WHILE_KW '(' Expression . ')' Statement   (rule 39)
    Expression  ->  Expression . ',' AssignmentExpr   (rule 142)

    ')' 	shift, and go to state 219
    ',' 	shift, and go to state 153



state 173

    WithStat  ->  WITH_KW '(' Expression . ')' Statement   (rule 52)
    Expression  ->  Expression . ',' AssignmentExpr   (rule 142)

    ')' 	shift, and go to state 220
    ',' 	shift, and go to state 153



state 174

    PrimaryExpr  ->  '(' Expression ')' .   (rule 66)

    $default	reduce using rule 66 (PrimaryExpr)



state 175

    BlockStat  ->  '{' StatementList.Opt '}' .   (rule 19)

    $default	reduce using rule 19 (BlockStat)



state 176

    StatementList  ->  StatementList Statement .   (rule 23)

    $default	reduce using rule 23 (StatementList)



state 177

    Arguments  ->  '(' ')' .   (rule 77)

    $default	reduce using rule 77 (Arguments)



state 178

    Arguments  ->  '(' ArgumentList . ')'   (rule 78)
    ArgumentList  ->  ArgumentList . ',' AssignmentExpr   (rule 80)

    ')' 	shift, and go to state 221
    ',' 	shift, and go to state 222



state 179

    ArgumentList  ->  AssignmentExpr .   (rule 79)

    $default	reduce using rule 79 (ArgumentList)



state 180

    MemberExpr  ->  MemberExpr '.' Identifier .   (rule 69)

    $default	reduce using rule 69 (MemberExpr)



state 181

    MemberExpr  ->  MemberExpr '[' Expression . ']'   (rule 68)
    Expression  ->  Expression . ',' AssignmentExpr   (rule 142)

    ',' 	shift, and go to state 153
    ']' 	shift, and go to state 223



state 182

    CallExpr  ->  CallExpr '.' Identifier .   (rule 76)

    $default	reduce using rule 76 (CallExpr)



state 183

    CallExpr  ->  CallExpr '[' Expression . ']'   (rule 75)
    Expression  ->  Expression . ',' AssignmentExpr   (rule 142)

    ',' 	shift, and go to state 153
    ']' 	shift, and go to state 224



state 184

    AssignmentExpr  ->  LeftHandSideExpr AssignmentOperator AssignmentExpr .   (rule 128)

    $default	reduce using rule 128 (AssignmentExpr)



state 185

    MultiplicativeExpr  ->  MultiplicativeExpr '*' UnaryExpr .   (rule 97)

    $default	reduce using rule 97 (MultiplicativeExpr)



state 186

    MultiplicativeExpr  ->  MultiplicativeExpr '/' UnaryExpr .   (rule 98)

    $default	reduce using rule 98 (MultiplicativeExpr)



state 187

    MultiplicativeExpr  ->  MultiplicativeExpr '%' UnaryExpr .   (rule 99)

    $default	reduce using rule 99 (MultiplicativeExpr)



state 188

    MultiplicativeExpr  ->  MultiplicativeExpr . '*' UnaryExpr   (rule 97)
    MultiplicativeExpr  ->  MultiplicativeExpr . '/' UnaryExpr   (rule 98)
    MultiplicativeExpr  ->  MultiplicativeExpr . '%' UnaryExpr   (rule 99)
    AdditiveExpr  ->  AdditiveExpr '+' MultiplicativeExpr .   (rule 101)

    '*' 	shift, and go to state 132
    '/' 	shift, and go to state 133
    '%' 	shift, and go to state 134

    $default	reduce using rule 101 (AdditiveExpr)



state 189

    MultiplicativeExpr  ->  MultiplicativeExpr . '*' UnaryExpr   (rule 97)
    MultiplicativeExpr  ->  MultiplicativeExpr . '/' UnaryExpr   (rule 98)
    MultiplicativeExpr  ->  MultiplicativeExpr . '%' UnaryExpr   (rule 99)
    AdditiveExpr  ->  AdditiveExpr '-' MultiplicativeExpr .   (rule 102)

    '*' 	shift, and go to state 132
    '/' 	shift, and go to state 133
    '%' 	shift, and go to state 134

    $default	reduce using rule 102 (AdditiveExpr)



state 190

    AdditiveExpr  ->  AdditiveExpr . '+' MultiplicativeExpr   (rule 101)
    AdditiveExpr  ->  AdditiveExpr . '-' MultiplicativeExpr   (rule 102)
    ShiftExpr  ->  ShiftExpr LS_KW AdditiveExpr .   (rule 104)

    '+' 	shift, and go to state 135
    '-' 	shift, and go to state 136

    $default	reduce using rule 104 (ShiftExpr)



state 191

    AdditiveExpr  ->  AdditiveExpr . '+' MultiplicativeExpr   (rule 101)
    AdditiveExpr  ->  AdditiveExpr . '-' MultiplicativeExpr   (rule 102)
    ShiftExpr  ->  ShiftExpr URS_KW AdditiveExpr .   (rule 106)

    '+' 	shift, and go to state 135
    '-' 	shift, and go to state 136

    $default	reduce using rule 106 (ShiftExpr)



state 192

    AdditiveExpr  ->  AdditiveExpr . '+' MultiplicativeExpr   (rule 101)
    AdditiveExpr  ->  AdditiveExpr . '-' MultiplicativeExpr   (rule 102)
    ShiftExpr  ->  ShiftExpr RS_KW AdditiveExpr .   (rule 105)

    '+' 	shift, and go to state 135
    '-' 	shift, and go to state 136

    $default	reduce using rule 105 (ShiftExpr)



state 193

    ShiftExpr  ->  ShiftExpr . LS_KW AdditiveExpr   (rule 104)
    ShiftExpr  ->  ShiftExpr . RS_KW AdditiveExpr   (rule 105)
    ShiftExpr  ->  ShiftExpr . URS_KW AdditiveExpr   (rule 106)
    RelationalExpr  ->  RelationalExpr '>' ShiftExpr .   (rule 109)

    LS_KW	shift, and go to state 137
    URS_KW	shift, and go to state 138
    RS_KW	shift, and go to state 139

    $default	reduce using rule 109 (RelationalExpr)



state 194

    ShiftExpr  ->  ShiftExpr . LS_KW AdditiveExpr   (rule 104)
    ShiftExpr  ->  ShiftExpr . RS_KW AdditiveExpr   (rule 105)
    ShiftExpr  ->  ShiftExpr . URS_KW AdditiveExpr   (rule 106)
    RelationalExpr  ->  RelationalExpr '<' ShiftExpr .   (rule 108)

    LS_KW	shift, and go to state 137
    URS_KW	shift, and go to state 138
    RS_KW	shift, and go to state 139

    $default	reduce using rule 108 (RelationalExpr)



state 195

    ShiftExpr  ->  ShiftExpr . LS_KW AdditiveExpr   (rule 104)
    ShiftExpr  ->  ShiftExpr . RS_KW AdditiveExpr   (rule 105)
    ShiftExpr  ->  ShiftExpr . URS_KW AdditiveExpr   (rule 106)
    RelationalExpr  ->  RelationalExpr GE_KW ShiftExpr .   (rule 110)

    LS_KW	shift, and go to state 137
    URS_KW	shift, and go to state 138
    RS_KW	shift, and go to state 139

    $default	reduce using rule 110 (RelationalExpr)



state 196

    ShiftExpr  ->  ShiftExpr . LS_KW AdditiveExpr   (rule 104)
    ShiftExpr  ->  ShiftExpr . RS_KW AdditiveExpr   (rule 105)
    ShiftExpr  ->  ShiftExpr . URS_KW AdditiveExpr   (rule 106)
    RelationalExpr  ->  RelationalExpr LE_KW ShiftExpr .   (rule 111)

    LS_KW	shift, and go to state 137
    URS_KW	shift, and go to state 138
    RS_KW	shift, and go to state 139

    $default	reduce using rule 111 (RelationalExpr)



state 197

    RelationalExpr  ->  RelationalExpr . '<' ShiftExpr   (rule 108)
    RelationalExpr  ->  RelationalExpr . '>' ShiftExpr   (rule 109)
    RelationalExpr  ->  RelationalExpr . GE_KW ShiftExpr   (rule 110)
    RelationalExpr  ->  RelationalExpr . LE_KW ShiftExpr   (rule 111)
    EqualityExpr  ->  EqualityExpr EQ_KW RelationalExpr .   (rule 113)

    '>' 	shift, and go to state 140
    '<' 	shift, and go to state 141
    GE_KW	shift, and go to state 142
    LE_KW	shift, and go to state 143

    $default	reduce using rule 113 (EqualityExpr)



state 198

    RelationalExpr  ->  RelationalExpr . '<' ShiftExpr   (rule 108)
    RelationalExpr  ->  RelationalExpr . '>' ShiftExpr   (rule 109)
    RelationalExpr  ->  RelationalExpr . GE_KW ShiftExpr   (rule 110)
    RelationalExpr  ->  RelationalExpr . LE_KW ShiftExpr   (rule 111)
    EqualityExpr  ->  EqualityExpr NE_KW RelationalExpr .   (rule 114)

    '>' 	shift, and go to state 140
    '<' 	shift, and go to state 141
    GE_KW	shift, and go to state 142
    LE_KW	shift, and go to state 143

    $default	reduce using rule 114 (EqualityExpr)



state 199

    EqualityExpr  ->  EqualityExpr . EQ_KW RelationalExpr   (rule 113)
    EqualityExpr  ->  EqualityExpr . NE_KW RelationalExpr   (rule 114)
    BitAndExpr  ->  BitAndExpr '&' EqualityExpr .   (rule 116)

    EQ_KW	shift, and go to state 144
    NE_KW	shift, and go to state 145

    $default	reduce using rule 116 (BitAndExpr)



state 200

    BitAndExpr  ->  BitAndExpr . '&' EqualityExpr   (rule 116)
    BitXorExpr  ->  BitXorExpr '^' BitAndExpr .   (rule 118)

    '&' 	shift, and go to state 146

    $default	reduce using rule 118 (BitXorExpr)



state 201

    BitXorExpr  ->  BitXorExpr . '^' BitAndExpr   (rule 118)
    BitIorExpr  ->  BitIorExpr '|' BitXorExpr .   (rule 120)

    '^' 	shift, and go to state 147

    $default	reduce using rule 120 (BitIorExpr)



state 202

    BitIorExpr  ->  BitIorExpr . '|' BitXorExpr   (rule 120)
    LogicalAndExpr  ->  LogicalAndExpr ANDAND_KW BitIorExpr .   (rule 122)

    '|' 	shift, and go to state 148

    $default	reduce using rule 122 (LogicalAndExpr)



state 203

    LogicalAndExpr  ->  LogicalAndExpr . ANDAND_KW BitIorExpr   (rule 122)
    LogicalOrExpression  ->  LogicalOrExpression OROR_KW LogicalAndExpr .   (rule 124)

    ANDAND_KW	shift, and go to state 149

    $default	reduce using rule 124 (LogicalOrExpression)



state 204

    ConditionalExpr  ->  LogicalOrExpression '?' AssignmentExpr . ':' AssignmentExpr   (rule 126)

    ':' 	shift, and go to state 225



state 205

    Expression  ->  Expression ',' AssignmentExpr .   (rule 142)

    $default	reduce using rule 142 (Expression)



state 206

    LabeledStat  ->  Identifier ':' Statement .   (rule 54)

    $default	reduce using rule 54 (LabeledStat)



state 207

    LabeledStat  ->  CASE_KW Literal ':' Statement .   (rule 55)

    $default	reduce using rule 55 (LabeledStat)



state 208

    DoStat  ->  DO_KW Statement WHILE_KW '(' . Expression ')' ';'   (rule 48)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 226
    Literal	go to state 74
    Identifier	go to state 81



state 209

    VariableDeclaration  ->  Identifier . Initializer.Opt   (rule 28)
    ForInInit  ->  VAR_KW Identifier . Initializer.Opt   (rule 47)

    '=' 	shift, and go to state 170

    $default	reduce using rule 29 (Initializer.Opt)

    Initializer.Opt	go to state 227



state 210

    ForStat  ->  FOR_KW '(' ForInit.Opt ';' . Expression.Opt ';' Expression.Opt ')' Statement   (rule 40)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    $default	reduce using rule 61 (Expression.Opt)

    Expression.Opt	go to state 228
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 89
    Literal	go to state 74
    Identifier	go to state 81



state 211

    ForInStat  ->  FOR_KW '(' ForInInit IN_KW . Expression ')' Statement   (rule 45)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 229
    Literal	go to state 74
    Identifier	go to state 81



state 212

    FunctionDefinition  ->  FUNCTION_KW Identifier '(' ParameterList.Opt . ')' BlockStat   (rule 56)

    ')' 	shift, and go to state 230



state 213

    ParameterList.Opt  ->  ParameterList .   (rule 58)
    ParameterList  ->  ParameterList . ',' Identifier   (rule 60)

    ',' 	shift, and go to state 231

    $default	reduce using rule 58 (ParameterList.Opt)



state 214

    ParameterList  ->  Identifier .   (rule 59)

    $default	reduce using rule 59 (ParameterList)



state 215

    IfThenStat  ->  IF_KW '(' Expression ')' . Statement   (rule 33)
    IfThenStat  ->  IF_KW '(' Expression ')' . Statement ELSE_KW Statement   (rule 34)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    CASE_KW	shift, and go to state 8
    CONTINUE_KW	shift, and go to state 9
    DELETE_KW	shift, and go to state 10
    DO_KW	shift, and go to state 11
    FOR_KW	shift, and go to state 12
    IF_KW	shift, and go to state 14
    NEW_KW	shift, and go to state 15
    RETURN_KW	shift, and go to state 16
    SWITCH_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 20
    VOID_KW	shift, and go to state 21
    WHILE_KW	shift, and go to state 22
    WITH_KW	shift, and go to state 23
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    ';' 	shift, and go to state 26
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '{' 	shift, and go to state 31
    '!' 	shift, and go to state 32

    Statement	go to state 232
    BlockStat	go to state 36
    VariableStat	go to state 37
    VariableIntroductions	go to state 38
    EmptyStat	go to state 39
    ExpressionStat	go to state 40
    IfThenStat	go to state 41
    IterationStat	go to state 42
    WhileStat	go to state 43
    ForStat	go to state 44
    ForInStat	go to state 45
    DoStat	go to state 46
    ContinueStat	go to state 47
    BreakStat	go to state 48
    ReturnStat	go to state 49
    WithStat	go to state 50
    SwitchStat	go to state 51
    LabeledStat	go to state 52
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 73
    Literal	go to state 74
    Identifier	go to state 75



state 216

    SwitchStat  ->  SWITCH_KW '(' Expression ')' . BlockStat   (rule 53)

    '{' 	shift, and go to state 31

    BlockStat	go to state 233



state 217

    VariableDeclarationList  ->  VariableDeclarationList ',' VariableDeclaration .   (rule 27)

    $default	reduce using rule 27 (VariableDeclarationList)



state 218

    Initializer.Opt  ->  '=' AssignmentExpr .   (rule 30)

    $default	reduce using rule 30 (Initializer.Opt)



state 219

    WhileStat  ->  WHILE_KW '(' Expression ')' . Statement   (rule 39)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    CASE_KW	shift, and go to state 8
    CONTINUE_KW	shift, and go to state 9
    DELETE_KW	shift, and go to state 10
    DO_KW	shift, and go to state 11
    FOR_KW	shift, and go to state 12
    IF_KW	shift, and go to state 14
    NEW_KW	shift, and go to state 15
    RETURN_KW	shift, and go to state 16
    SWITCH_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 20
    VOID_KW	shift, and go to state 21
    WHILE_KW	shift, and go to state 22
    WITH_KW	shift, and go to state 23
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    ';' 	shift, and go to state 26
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '{' 	shift, and go to state 31
    '!' 	shift, and go to state 32

    Statement	go to state 234
    BlockStat	go to state 36
    VariableStat	go to state 37
    VariableIntroductions	go to state 38
    EmptyStat	go to state 39
    ExpressionStat	go to state 40
    IfThenStat	go to state 41
    IterationStat	go to state 42
    WhileStat	go to state 43
    ForStat	go to state 44
    ForInStat	go to state 45
    DoStat	go to state 46
    ContinueStat	go to state 47
    BreakStat	go to state 48
    ReturnStat	go to state 49
    WithStat	go to state 50
    SwitchStat	go to state 51
    LabeledStat	go to state 52
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 73
    Literal	go to state 74
    Identifier	go to state 75



state 220

    WithStat  ->  WITH_KW '(' Expression ')' . Statement   (rule 52)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    CASE_KW	shift, and go to state 8
    CONTINUE_KW	shift, and go to state 9
    DELETE_KW	shift, and go to state 10
    DO_KW	shift, and go to state 11
    FOR_KW	shift, and go to state 12
    IF_KW	shift, and go to state 14
    NEW_KW	shift, and go to state 15
    RETURN_KW	shift, and go to state 16
    SWITCH_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 20
    VOID_KW	shift, and go to state 21
    WHILE_KW	shift, and go to state 22
    WITH_KW	shift, and go to state 23
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    ';' 	shift, and go to state 26
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '{' 	shift, and go to state 31
    '!' 	shift, and go to state 32

    Statement	go to state 235
    BlockStat	go to state 36
    VariableStat	go to state 37
    VariableIntroductions	go to state 38
    EmptyStat	go to state 39
    ExpressionStat	go to state 40
    IfThenStat	go to state 41
    IterationStat	go to state 42
    WhileStat	go to state 43
    ForStat	go to state 44
    ForInStat	go to state 45
    DoStat	go to state 46
    ContinueStat	go to state 47
    BreakStat	go to state 48
    ReturnStat	go to state 49
    WithStat	go to state 50
    SwitchStat	go to state 51
    LabeledStat	go to state 52
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 73
    Literal	go to state 74
    Identifier	go to state 75



state 221

    Arguments  ->  '(' ArgumentList ')' .   (rule 78)

    $default	reduce using rule 78 (Arguments)



state 222

    ArgumentList  ->  ArgumentList ',' . AssignmentExpr   (rule 80)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 236
    Literal	go to state 74
    Identifier	go to state 81



state 223

    MemberExpr  ->  MemberExpr '[' Expression ']' .   (rule 68)

    $default	reduce using rule 68 (MemberExpr)



state 224

    CallExpr  ->  CallExpr '[' Expression ']' .   (rule 75)

    $default	reduce using rule 75 (CallExpr)



state 225

    ConditionalExpr  ->  LogicalOrExpression '?' AssignmentExpr ':' . AssignmentExpr   (rule 126)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 237
    Literal	go to state 74
    Identifier	go to state 81



state 226

    DoStat  ->  DO_KW Statement WHILE_KW '(' Expression . ')' ';'   (rule 48)
    Expression  ->  Expression . ',' AssignmentExpr   (rule 142)

    ')' 	shift, and go to state 238
    ',' 	shift, and go to state 153



state 227

    VariableDeclaration  ->  Identifier Initializer.Opt .   (rule 28)
    ForInInit  ->  VAR_KW Identifier Initializer.Opt .   (rule 47)

    IN_KW	reduce using rule 47 (ForInInit)
    $default	reduce using rule 28 (VariableDeclaration)



state 228

    ForStat  ->  FOR_KW '(' ForInit.Opt ';' Expression.Opt . ';' Expression.Opt ')' Statement   (rule 40)

    ';' 	shift, and go to state 239



state 229

    ForInStat  ->  FOR_KW '(' ForInInit IN_KW Expression . ')' Statement   (rule 45)
    Expression  ->  Expression . ',' AssignmentExpr   (rule 142)

    ')' 	shift, and go to state 240
    ',' 	shift, and go to state 153



state 230

    FunctionDefinition  ->  FUNCTION_KW Identifier '(' ParameterList.Opt ')' . BlockStat   (rule 56)

    '{' 	shift, and go to state 31

    BlockStat	go to state 241



state 231

    ParameterList  ->  ParameterList ',' . Identifier   (rule 60)

    IDENTIFIER_KW	shift, and go to state 1

    Identifier	go to state 242



state 232

    IfThenStat  ->  IF_KW '(' Expression ')' Statement .   (rule 33)
    IfThenStat  ->  IF_KW '(' Expression ')' Statement . ELSE_KW Statement   (rule 34)

    ELSE_KW	shift, and go to state 243

    ELSE_KW	[reduce using rule 33 (IfThenStat)]
    $default	reduce using rule 33 (IfThenStat)



state 233

    SwitchStat  ->  SWITCH_KW '(' Expression ')' BlockStat .   (rule 53)

    $default	reduce using rule 53 (SwitchStat)



state 234

    WhileStat  ->  WHILE_KW '(' Expression ')' Statement .   (rule 39)

    $default	reduce using rule 39 (WhileStat)



state 235

    WithStat  ->  WITH_KW '(' Expression ')' Statement .   (rule 52)

    $default	reduce using rule 52 (WithStat)



state 236

    ArgumentList  ->  ArgumentList ',' AssignmentExpr .   (rule 80)

    $default	reduce using rule 80 (ArgumentList)



state 237

    ConditionalExpr  ->  LogicalOrExpression '?' AssignmentExpr ':' AssignmentExpr .   (rule 126)

    $default	reduce using rule 126 (ConditionalExpr)



state 238

    DoStat  ->  DO_KW Statement WHILE_KW '(' Expression ')' . ';'   (rule 48)

    ';' 	shift, and go to state 244



state 239

    ForStat  ->  FOR_KW '(' ForInit.Opt ';' Expression.Opt ';' . Expression.Opt ')' Statement   (rule 40)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    DELETE_KW	shift, and go to state 10
    NEW_KW	shift, and go to state 15
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VOID_KW	shift, and go to state 21
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '!' 	shift, and go to state 32

    $default	reduce using rule 61 (Expression.Opt)

    Expression.Opt	go to state 245
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 89
    Literal	go to state 74
    Identifier	go to state 81



state 240

    ForInStat  ->  FOR_KW '(' ForInInit IN_KW Expression ')' . Statement   (rule 45)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    CASE_KW	shift, and go to state 8
    CONTINUE_KW	shift, and go to state 9
    DELETE_KW	shift, and go to state 10
    DO_KW	shift, and go to state 11
    FOR_KW	shift, and go to state 12
    IF_KW	shift, and go to state 14
    NEW_KW	shift, and go to state 15
    RETURN_KW	shift, and go to state 16
    SWITCH_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 20
    VOID_KW	shift, and go to state 21
    WHILE_KW	shift, and go to state 22
    WITH_KW	shift, and go to state 23
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    ';' 	shift, and go to state 26
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '{' 	shift, and go to state 31
    '!' 	shift, and go to state 32

    Statement	go to state 246
    BlockStat	go to state 36
    VariableStat	go to state 37
    VariableIntroductions	go to state 38
    EmptyStat	go to state 39
    ExpressionStat	go to state 40
    IfThenStat	go to state 41
    IterationStat	go to state 42
    WhileStat	go to state 43
    ForStat	go to state 44
    ForInStat	go to state 45
    DoStat	go to state 46
    ContinueStat	go to state 47
    BreakStat	go to state 48
    ReturnStat	go to state 49
    WithStat	go to state 50
    SwitchStat	go to state 51
    LabeledStat	go to state 52
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 73
    Literal	go to state 74
    Identifier	go to state 75



state 241

    FunctionDefinition  ->  FUNCTION_KW Identifier '(' ParameterList.Opt ')' BlockStat .   (rule 56)

    $default	reduce using rule 56 (FunctionDefinition)



state 242

    ParameterList  ->  ParameterList ',' Identifier .   (rule 60)

    $default	reduce using rule 60 (ParameterList)



state 243

    IfThenStat  ->  IF_KW '(' Expression ')' Statement ELSE_KW . Statement   (rule 34)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    CASE_KW	shift, and go to state 8
    CONTINUE_KW	shift, and go to state 9
    DELETE_KW	shift, and go to state 10
    DO_KW	shift, and go to state 11
    FOR_KW	shift, and go to state 12
    IF_KW	shift, and go to state 14
    NEW_KW	shift, and go to state 15
    RETURN_KW	shift, and go to state 16
    SWITCH_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 20
    VOID_KW	shift, and go to state 21
    WHILE_KW	shift, and go to state 22
    WITH_KW	shift, and go to state 23
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    ';' 	shift, and go to state 26
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '{' 	shift, and go to state 31
    '!' 	shift, and go to state 32

    Statement	go to state 247
    BlockStat	go to state 36
    VariableStat	go to state 37
    VariableIntroductions	go to state 38
    EmptyStat	go to state 39
    ExpressionStat	go to state 40
    IfThenStat	go to state 41
    IterationStat	go to state 42
    WhileStat	go to state 43
    ForStat	go to state 44
    ForInStat	go to state 45
    DoStat	go to state 46
    ContinueStat	go to state 47
    BreakStat	go to state 48
    ReturnStat	go to state 49
    WithStat	go to state 50
    SwitchStat	go to state 51
    LabeledStat	go to state 52
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 73
    Literal	go to state 74
    Identifier	go to state 75



state 244

    DoStat  ->  DO_KW Statement WHILE_KW '(' Expression ')' ';' .   (rule 48)

    $default	reduce using rule 48 (DoStat)



state 245

    ForStat  ->  FOR_KW '(' ForInit.Opt ';' Expression.Opt ';' Expression.Opt . ')' Statement   (rule 40)

    ')' 	shift, and go to state 248



state 246

    ForInStat  ->  FOR_KW '(' ForInInit IN_KW Expression ')' Statement .   (rule 45)

    $default	reduce using rule 45 (ForInStat)



state 247

    IfThenStat  ->  IF_KW '(' Expression ')' Statement ELSE_KW Statement .   (rule 34)

    $default	reduce using rule 34 (IfThenStat)



state 248

    ForStat  ->  FOR_KW '(' ForInit.Opt ';' Expression.Opt ';' Expression.Opt ')' . Statement   (rule 40)

    IDENTIFIER_KW	shift, and go to state 1
    LITERAL_BOOLEAN	shift, and go to state 2
    LITERAL_FLOAT	shift, and go to state 3
    LITERAL_INT	shift, and go to state 4
    LITERAL_STRING	shift, and go to state 5
    LITERAL_NULL	shift, and go to state 6
    BREAK_KW	shift, and go to state 7
    CASE_KW	shift, and go to state 8
    CONTINUE_KW	shift, and go to state 9
    DELETE_KW	shift, and go to state 10
    DO_KW	shift, and go to state 11
    FOR_KW	shift, and go to state 12
    IF_KW	shift, and go to state 14
    NEW_KW	shift, and go to state 15
    RETURN_KW	shift, and go to state 16
    SWITCH_KW	shift, and go to state 17
    THIS_KW	shift, and go to state 18
    TYPEOF_KW	shift, and go to state 19
    VAR_KW	shift, and go to state 20
    VOID_KW	shift, and go to state 21
    WHILE_KW	shift, and go to state 22
    WITH_KW	shift, and go to state 23
    ICR_KW	shift, and go to state 24
    DECR_KW	shift, and go to state 25
    ';' 	shift, and go to state 26
    '(' 	shift, and go to state 27
    '~' 	shift, and go to state 28
    '+' 	shift, and go to state 29
    '-' 	shift, and go to state 30
    '{' 	shift, and go to state 31
    '!' 	shift, and go to state 32

    Statement	go to state 249
    BlockStat	go to state 36
    VariableStat	go to state 37
    VariableIntroductions	go to state 38
    EmptyStat	go to state 39
    ExpressionStat	go to state 40
    IfThenStat	go to state 41
    IterationStat	go to state 42
    WhileStat	go to state 43
    ForStat	go to state 44
    ForInStat	go to state 45
    DoStat	go to state 46
    ContinueStat	go to state 47
    BreakStat	go to state 48
    ReturnStat	go to state 49
    WithStat	go to state 50
    SwitchStat	go to state 51
    LabeledStat	go to state 52
    PrimaryExpr	go to state 54
    MemberExpr	go to state 55
    NewExpr	go to state 56
    CallExpr	go to state 57
    LeftHandSideExpr	go to state 58
    PostfixExpr	go to state 59
    UnaryExpr	go to state 60
    MultiplicativeExpr	go to state 61
    AdditiveExpr	go to state 62
    ShiftExpr	go to state 63
    RelationalExpr	go to state 64
    EqualityExpr	go to state 65
    BitAndExpr	go to state 66
    BitXorExpr	go to state 67
    BitIorExpr	go to state 68
    LogicalAndExpr	go to state 69
    LogicalOrExpression	go to state 70
    ConditionalExpr	go to state 71
    AssignmentExpr	go to state 72
    Expression	go to state 73
    Literal	go to state 74
    Identifier	go to state 75



state 249

    ForStat  ->  FOR_KW '(' ForInit.Opt ';' Expression.Opt ';' Expression.Opt ')' Statement .   (rule 40)

    $default	reduce using rule 40 (ForStat)



state 250

    $   	go to state 251



state 251

    $   	go to state 252



state 252

    $default	accept
